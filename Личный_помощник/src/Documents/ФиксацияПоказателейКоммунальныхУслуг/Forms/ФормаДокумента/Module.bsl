#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.МесяцОплаты = ТекущаяДата();
	ЗаполнитьКэш();	
	ИзменитьДоступностьКомандыЗаполненияпоШаблону();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Шаблон) Тогда
		ЗаполнитьСписокУслугПоШаблону();	
	КонецЕсли;
	
	ИзменитьДоступностьКомандыЗаполненияпоШаблону();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	ЗаполнитьСписокУслугПоШаблону();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФиксированныеСуммыИПоказания(Команда)
	РассчитатьПоказателиИСуммы();
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	ФиксацияУслуги = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущиеДанные.Услуга, "ПроизвольнаяСумма, ПоСчетчику, ФиксированнаяСумма");
	Если ФиксацияУслуги.ПроизвольнаяСумма Тогда
		ФиксированнаяСумма = ФиксированныеСуммыОплаты.НайтиСтроки(Новый Структура("ВидУслуги", ТекущиеДанные.Услуга));
		ТекущиеДанные.Сумма = ?(ФиксированнаяСумма.Количество() > 0, ФиксированнаяСумма[0].Сумма, 0);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ТипУчета) Тогда
		ТекущиеДанные.ТипУчета = ПредопределенноеЗначение("Перечисление.ТипУчетаУслуги.ПоПоказаниям");
	КонецЕсли;
	
	УстановитьДоступностьКолонок(ТекущиеДанные.ТипУчета);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиТекущееПоказаниеСчетчикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	Если ТекущиеДанные.ТипУчета = ПредопределенноеЗначение("Перечисление.ТипУчетаУслуги.ПоПоказаниям") Тогда
		ПоказаниеСчетчикаПоУслуге = ПоказанияСчетчиков.НайтиСтроки(Новый Структура("ВидУслуги", ТекущиеДанные.Услуга));
		ПредыдущееПоказаниеСчетчика = ?(ПоказаниеСчетчикаПоУслуге.Количество() > 0, ПоказаниеСчетчикаПоУслуге[0].Значение, 0);
		ТекущиеДанные.ПотребляемоеЗначение = ТекущиеДанные.ТекущееПоказаниеСчетчика - ПредыдущееПоказаниеСчетчика;
		ЗначениеТарифа = ЗначенияТарифов.НайтиСтроки(Новый Структура("ВидУслуги", ТекущиеДанные.Услуга));
		ТекущиеДанные.Сумма = ?(ЗначениеТарифа.Количество() > 0, ЗначениеТарифа[0].Значение, 0) * ТекущиеДанные.ПотребляемоеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаПриИзменении(Элемент)
	

КонецПроцедуры

&НаКлиенте
Процедура УслугиТипУчетаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ТипУчета) Тогда
		ТекущиеДанные.ТипУчета = ПредопределенноеЗначение("Перечисление.ТипУчетаУслуги.ПоПоказаниям");
	КонецЕсли;
	
	УстановитьДоступностьКолонок(ТекущиеДанные.ТипУчета);
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьДоступностьКолонок(ТипУчета)
	
	Если ТипУчета = ПредопределенноеЗначение("Перечисление.ТипУчетаУслуги.Суммой") Тогда
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиТекущееПоказаниеСчетчика.ТолькоПросмотр = Истина;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиПотребляемоеЗначение.ТолькоПросмотр = Истина;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиСумма.ТолькоПросмотр = Ложь;
	ИначеЕсли ТипУчета = ПредопределенноеЗначение("Перечисление.ТипУчетаУслуги.ПоПоказаниям") Тогда
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиТекущееПоказаниеСчетчика.ТолькоПросмотр = Ложь;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиПотребляемоеЗначение.ТолькоПросмотр = Истина;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиСумма.ТолькоПросмотр = Истина;
	ИначеЕсли ТипУчета = ПредопределенноеЗначение("Перечисление.ТипУчетаУслуги.ПоПотреблению") Тогда
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиТекущееПоказаниеСчетчика.ТолькоПросмотр = Истина;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиПотребляемоеЗначение.ТолькоПросмотр = Ложь;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиСумма.ТолькоПросмотр = Истина;
	Иначе
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиТекущееПоказаниеСчетчика.ТолькоПросмотр = Ложь;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиПотребляемоеЗначение.ТолькоПросмотр = Ложь;
		Элементы.Услуги.ПодчиненныеЭлементы.УслугиСумма.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокУслугПоШаблону()
	
	Объект.Услуги.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныОперацийОперации.Услуга,
		|	ШаблоныОперацийОперации.ТипУчета
		|ИЗ
		|	Справочник.ШаблоныОпераций.Операции КАК ШаблоныОперацийОперации
		|ГДЕ
		|	ШаблоныОперацийОперации.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Шаблон);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Услуги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	РассчитатьПоказателиИСуммы();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьДоступностьКомандыЗаполненияпоШаблону()	
	КомандаЗаполненияПоШаблонуДоступна = ЗначениеЗаполнено(Объект.Шаблон);
	ЭлементУслугиЗаполнить = Элементы.Группа1.ПодчиненныеЭлементы.УслугиЗаполнить;
	ЭлементУслугиЗаполнитьПоШаблону = ЭлементУслугиЗаполнить.ПодчиненныеЭлементы.УслугиЗаполнитьПоШаблону;
	ЭлементУслугиЗаполнитьПоШаблону.Видимость = КомандаЗаполненияПоШаблонуДоступна;
КонецПроцедуры

&НаСервере
Процедура РассчитатьПоказателиИСуммы()
	
	Услуги = РеквизитФормыВЗначение("Объект").Услуги.ВыгрузитьКолонку("Услуга");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыУслуг.Ссылка КАК Услуга,
		|	ЕСТЬNULL(ПоказанияСчетчиков.Значение, 0) КАК ТекущееПоказаниеСчетчика,
		|	ЕСТЬNULL(ФиксированныеСуммыОплатыКоммунальныхУслугСрезПоследних.Сумма, 0) КАК Сумма,
		|	0 КАК ПотребляемоеЗначение
		|ИЗ
		|	Справочник.ВидыУслуг КАК ВидыУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказанияСчетчиков.СрезПоследних(&Дата, ВидУслуги В (&Услуги)) КАК ПоказанияСчетчиков
		|		ПО ВидыУслуг.Ссылка = ПоказанияСчетчиков.ВидУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксированныеСуммыОплатыКоммунальныхУслуг.СрезПоследних(&Дата, ВидУслуги В (&Услуги)) КАК ФиксированныеСуммыОплатыКоммунальныхУслугСрезПоследних
		|		ПО ВидыУслуг.Ссылка = ФиксированныеСуммыОплатыКоммунальныхУслугСрезПоследних.ВидУслуги
		|ГДЕ
		|	ВидыУслуг.Ссылка В(&Услуги)";
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Услуги", Услуги);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НайденныеСтроки = Объект.Услуги.НайтиСтроки(Новый Структура("Услуга", Выборка.Услуга));
		Для Каждого Строка Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(Строка, Выборка);	
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКэш()
	
	Значения = РегистрыСведений.ЗначенияТарифов.ПолучитьЗначенияТарифов(, Объект.Дата);
	ЗначениеВДанныеФормы(Значения, ЗначенияТарифов);	
	
	Значения = РегистрыСведений.ФиксированныеСуммыОплатыКоммунальныхУслуг.ПолучитьСуммыОплаты(, Объект.Дата);
	ЗначениеВДанныеФормы(Значения, ФиксированныеСуммыОплаты);
	
	Значения = РегистрыСведений.ПоказанияСчетчиков.ПолучитьПоказанияСчетчиков(, Объект.Дата);
	ЗначениеВДанныеФормы(Значения, ПоказанияСчетчиков);
	
КонецПроцедуры

#КонецОбласти


